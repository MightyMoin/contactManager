{"version":3,"sources":["context.js","components/Layout/TextInputGrp.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/Layout/Header.js","components/Layout/Sidenav.js","components/pages/About.js","components/pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","TextInputGrp","onChange","lable","name","error","className","htmlFor","classnames","defaultProps","AddContact","email","phone","errors","submitForm","e","a","preventDefault","newContact","Axios","post","history","push","onType","target","style","width","left","border","backgroundColor","borderBottom","onSubmit","bind","EditContact","updatedContact","match","params","put","Contact","show","onDeleteClick","delete","cursor","onClick","float","to","fontSize","Contacts","Fragment","position","key","Header","brand","Sidenav","About","Error","top","transform","href","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0520f383.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === 'DELETE_CONTACT') {\r\n    return {\r\n      ...state,\r\n      contacts: state.contacts.filter(\r\n        (contact) => contact.id !== action.payload\r\n      ),\r\n    };\r\n  } else if (action.type === 'ADD_CONTACT') {\r\n    return {\r\n      ...state,\r\n      contacts: [action.payload, ...state.contacts],\r\n    };\r\n  } else if (action.type === 'UPDATE_CONTACT') {\r\n    return {\r\n      ...state,\r\n      contacts: state.contacts.map((contact) =>\r\n        action.payload.id === contact.id ? (contact = action.payload) : contact\r\n      ),\r\n    };\r\n  } else return state;\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass TextInputGrp extends Component {\r\n  render() {\r\n    const { onChange, lable, name, type, value, error } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={lable}>{lable}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classnames('form-control', {\r\n            'is-invalid': error,\r\n          })}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTextInputGrp.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  lable: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGrp.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGrp;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../Layout/TextInputGrp';\r\nimport Axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  submitForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await Axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data,\r\n    });\r\n\r\n    // clearing the input boxes after input\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onType = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div\r\n              className=\"card mt-3 t\"\r\n              style={{\r\n                width: '50%',\r\n                left: '25%',\r\n                border: '0.5px solid #4f8a8b',\r\n              }}\r\n            >\r\n              <div\r\n                className=\"card-header text-dark\"\r\n                style={{\r\n                  backgroundColor: '#fbd46d',\r\n                  borderBottom: '1px solid #4f8a8b',\r\n                }}\r\n              >\r\n                Add Contact\r\n              </div>\r\n              <div\r\n                className=\"card-body text-left\"\r\n                style={{ width: '80%', left: '10%' }}\r\n              >\r\n                <form onSubmit={this.submitForm.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    lable=\"Name:\"\r\n                    value={name}\r\n                    onChange={this.onType}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    lable=\"Email:\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={this.onType}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    lable=\"Phone:\"\r\n                    value={phone}\r\n                    onChange={this.onType}\r\n                    error={errors.phone}\r\n                  />\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-dark\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../Layout/TextInputGrp';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    const { name, email, phone } = contact;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone,\r\n    });\r\n  }\r\n\r\n  submitForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updatedContact = {\r\n        name,phone,email\r\n    }\r\n\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updatedContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT' , payload:res.data});\r\n\r\n    // clearing the input boxes after input\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onType = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div\r\n              className=\"card mt-3 t\"\r\n              style={{\r\n                width: '50%',\r\n                left: '25%',\r\n                border: '0.5px solid #4f8a8b',\r\n              }}\r\n            >\r\n              <div\r\n                className=\"card-header text-dark\"\r\n                style={{\r\n                  backgroundColor: '#fbd46d',\r\n                  borderBottom: '1px solid #4f8a8b',\r\n                }}\r\n              >\r\n                Edit Contact\r\n              </div>\r\n              <div\r\n                className=\"card-body text-left\"\r\n                style={{ width: '80%', left: '10%' }}\r\n              >\r\n                <form onSubmit={this.submitForm.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    lable=\"Name:\"\r\n                    value={name}\r\n                    onChange={this.onType}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    lable=\"Email:\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={this.onType}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    lable=\"Phone:\"\r\n                    value={phone}\r\n                    onChange={this.onType}\r\n                    error={errors.phone}\r\n                  />\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-dark\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/contact.css';\r\nimport { Consumer } from '../../context';\r\nimport Axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    show: false,\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, phone, email } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body text-left\" style={{ width: '50%' }}>\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-caret-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    this.setState({ show: !this.state.show });\r\n                  }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times text-danger\"\r\n                  style={{ cursor: 'pointer', float: 'right' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`/contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt text-info mr-3 mt-1\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      fontSize: '17px',\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {this.state.show ? (\r\n                <ul className=\"list-group detail\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone} </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                className=\"display-4 mb-2\"\r\n                style={{ width: '50%', position: 'relative', left: '25%' }}\r\n              >\r\n                <h1>\r\n                  <span className=\"text-danger\">My </span> Contacts\r\n                </h1>\r\n              </div>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.key} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Header(props) {\r\n  const { brand } = props;\r\n  return (\r\n    <div className=\"text-light text-center p-3\" style={{backgroundColor:'#e43f5a'}}>\r\n      <h2>{brand}</h2>\r\n    </div>\r\n  );\r\n}\r\nHeader.propTypes = {\r\n  brand: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../css/sidenav.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Sidenav() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav-elem text-center p-3\">\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-address-card text-danger mt-4 mb-4\">\r\n            <p className=\"nav-heading\">Contacts</p>\r\n          </i>\r\n        </Link>\r\n        <Link to=\"/contacts/add\">\r\n          <i className=\"fas fa-user-plus text-danger mt-4 mb-4\">\r\n          <p className=\"nav-heading\">Add </p>\r\n          </i>\r\n        </Link>\r\n        <Link to=\"/about\">\r\n          <i className=\"fas fa-question text-danger mt-4 mb-4\">\r\n          <p className=\"nav-heading\">About</p>\r\n          </i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidenav;\r\n","import React from 'react';\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div className=\"p-3 display-4\">\r\n      <h1 className=\"text-danger text-center\">About</h1>\r\n      <p className=\"mt-5\">This is a Contact Manager App.</p>\r\n      <p>0.1.0.v</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Error() {\r\n    return (\r\n        <div style={{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%,-50%'}}>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found </h1>\r\n            <p className=\"lead\" >Sorry that page doesnot exist</p>\r\n            <a href=\"/\"> Click here to redirect to Homepage</a>\r\n        </div>\r\n    )\r\n}\r\nexport default Error;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/Layout/Header';\nimport Sidenav from './components/Layout/Sidenav';\nimport About from './components/pages/About';\nimport Error from './components/pages/Error';\nimport { Provider } from './context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App text-center\">\n          <Header brand=\"Contact Manager\"></Header>\n          <Sidenav />\n          <Switch>\n            <Route exact path=\"/\" component={Contacts}></Route>\n            <Route exact path=\"/contacts/add\" component={AddContact}></Route>\n            <Route exact path=\"/contacts/edit/:id\" component={EditContact}></Route>\n            <Route exact path=\"/about\" component={About}></Route>\n            <Route component={Error}></Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}